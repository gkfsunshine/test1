<?php
namespace App\Model;

use Illuminate\Database\Eloquent\Model;


/**
 * Model LogAlipayPayModel
 * 
 * @property int $id
 * @property int $user_id
 * @property int $type
 * @property string $out_trade_no
 * @property int $total_amount
 * @property string $passback_params
 * @property int $status
 * @property int $transaction_id
 * @property int $dealed_at
 * @property int $created_at
 * @property int $updated_at
 *
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel where($column, $operator = null, $value = null, $boolean = 'and')
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel whereIn($column, $values, $boolean = 'and', $not = false)
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel leftJoin($table, $first, $operator = null, $second = null)
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel rightJoin($table, $first, $operator = null, $second = null)
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel get($columns = ['*'])
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel paginate($perPage = 15, $columns = ['*'], $pageName = 'page', $page = null)
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel find($id, $columns = ['*'])
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel first($columns = ['*'])
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel select($columns = ['*'])
 * @method static \Illuminate\Database\Query\Builder | \App\Model\LogAlipayPayModel orderBy($column, $direction = 'asc') * @package App\Model
 */
class LogAlipayPayModel extends Model
{
    protected $table = 'log_alipay_pay';

    //定义为毫秒时间戳
    protected $dateFormat = 'Uv';


    //获取created_at字段时处理
    public function getCreatedAtAttribute($value)
    {
        if(is_string($value)){
            return (int)($value / 1000);
        }

        return $value;
    }

    //获取updated_at字段时处理
    public function getUpdatedAtAttribute($value)
    {
        if(is_string($value)){
            return (int)($value / 1000);
        }

        return $value;
    }

    /**
     * 获取对应数据库链接对象
     * @eg 用于分库分表时获取数据所在的数据库对象
     * @param $id
     * @return object
     */
    /*public static function getShardingConnection($id)
    {
        $mod = $id % 4;
        $model = '\App\Model\Mysql2\User_'.$mod.'Model';

        return new $model;
    }*/

}